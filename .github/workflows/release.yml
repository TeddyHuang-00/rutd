# Based on typst's release action:
# https://github.com/typst/typst/blob/main/.github/workflows/release.yml

name: Release Binaries
on:
  push:
    tags:
      - "v*"

jobs:
  build-release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-24.04
            feature: vendored
          - target: aarch64-unknown-linux-musl
            os: ubuntu-24.04-arm
            feature: vendored
          - target: aarch64-apple-darwin
            os: macos-latest
            feature: default
          - target: x86_64-apple-darwin
            os: macos-13
            feature: default
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            feature: default
          - target: aarch64-pc-windows-msvc
            os: windows-11-arm
            feature: default

    steps:
      - uses: actions/checkout@v5
      - name: Install Cross-Compilation Tools
        if: contains(matrix.target, 'linux-musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config libssl-dev

      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Run Build
        run: cargo build --locked --release --target ${{ matrix.target }} -F ${{ matrix.feature }}

      - name: Setup python for checksums
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Create artifact directory
        shell: bash
        run: |
          directory=rutd-${{ matrix.target }}
          mkdir $directory
          cp README.md LICENSE $directory

          if [ -f target/${{ matrix.target }}/release/rutd-cli.exe ]; then
            cp target/${{ matrix.target }}/release/rutd-*i.exe $directory
            7z a -r $directory.zip $directory
            python3 -c "import hashlib; open('$directory.zip.sha256', 'w').write(hashlib.file_digest(open('$directory.zip', 'rb'), 'sha256').hexdigest())"
          else
            cp target/${{ matrix.target }}/release/rutd-*i $directory
            tar cJf $directory.tar.xz $directory
            python3 -c "import hashlib; open('$directory.tar.xz.sha256', 'w').write(hashlib.file_digest(open('$directory.tar.xz', 'rb'), 'sha256').hexdigest())"
          fi

      - name: Upload Release
        uses: ncipollo/release-action@v1.18.0
        with:
          artifacts: "rutd-${{ matrix.target }}.*"
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true

  update-changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        # Get all history and tags
        with:
          fetch-depth: 0
      - name: Determine version info
        id: vInfo
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          # Remove the 'v' prefix if present
          VERSION=${CURRENT_TAG#v}
          # Check if version has pre-release suffix (contains '-')
          if [[ "$VERSION" == *"-"* ]]; then
            echo "Pre-release version detected: $VERSION"
            echo "preRelease=true" >> $GITHUB_OUTPUT
            PREV_TAG=$(git --no-pager tag --sort=-v:refname | grep -E "^v[0-9]+\.[0-9]+\.[0-9]+" | grep -v "$CURRENT_TAG" | head -n 1 || echo "")
            echo "Found previous tag: $PREV_TAG"
            echo "previousTag=$PREV_TAG" >> $GITHUB_OUTPUT
          else
            echo "Stable version detected: $VERSION"
            echo "preRelease=false" >> $GITHUB_OUTPUT
            PREV_TAG=$(git --no-pager tag --sort=-v:refname | grep -E "^v[0-9]+\.[0-9]+\.[0-9]+$" | grep -v "$CURRENT_TAG" | head -n 1 || echo "")
            echo "Found previous stable tag: $PREV_TAG"
            echo "previousTag=$PREV_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ steps.vInfo.outputs.previousTag }}
          writeToFile: false

      - name: Update Release
        uses: ncipollo/release-action@v1.18.0
        with:
          allowUpdates: true
          body: ${{ steps.changelog.outputs.changes }}
          prerelease: ${{ steps.vInfo.outputs.prerelease == 'true' }}
